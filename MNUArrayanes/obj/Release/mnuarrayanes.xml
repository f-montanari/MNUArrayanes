<?xml version="1.0"?>
<doc>
<assembly>
<name>
mnuarrayanes
</name>
</assembly>
<members>
<member name="T:mnuarrayanes.My.Resources.Resources">
<summary>
  Clase de recurso fuertemente tipado, para buscar cadenas traducidas, etc.
</summary>
</member>
<member name="P:mnuarrayanes.My.Resources.Resources.ResourceManager">
<summary>
  Devuelve la instancia de ResourceManager almacenada en caché utilizada por esta clase.
</summary>
</member>
<member name="P:mnuarrayanes.My.Resources.Resources.Culture">
<summary>
  Reemplaza la propiedad CurrentUICulture del subproceso actual para todas las
  búsquedas de recursos mediante esta clase de recurso fuertemente tipado.
</summary>
</member>
<member name="P:mnuarrayanes.My.Resources.Resources.A_Favor">
<summary>
  Busca un recurso adaptado de tipo System.Drawing.Bitmap.
</summary>
</member>
<member name="P:mnuarrayanes.My.Resources.Resources.Cancel">
<summary>
  Busca un recurso adaptado de tipo System.Drawing.Bitmap.
</summary>
</member>
<member name="P:mnuarrayanes.My.Resources.Resources.ELA_logo">
<summary>
  Busca un recurso adaptado de tipo System.Drawing.Bitmap.
</summary>
</member>
<member name="P:mnuarrayanes.My.Resources.Resources.En_Contra">
<summary>
  Busca un recurso adaptado de tipo System.Drawing.Bitmap.
</summary>
</member>
<member name="P:mnuarrayanes.My.Resources.Resources.Logo">
<summary>
  Busca un recurso adaptado de tipo System.Drawing.Icon similar a (Icono).
</summary>
</member>
<member name="P:mnuarrayanes.My.Resources.Resources.OK">
<summary>
  Busca un recurso adaptado de tipo System.Drawing.Bitmap.
</summary>
</member>
<member name="P:mnuarrayanes.My.Resources.Resources.ONU_Logo">
<summary>
  Busca un recurso adaptado de tipo System.Drawing.Bitmap.
</summary>
</member>
<member name="P:mnuarrayanes.My.Resources.Resources.Presentes">
<summary>
  Busca un recurso adaptado de tipo System.Drawing.Bitmap.
</summary>
</member>
<member name="P:mnuarrayanes.My.Resources.Resources.Presentes_txt">
<summary>
  Busca un recurso adaptado de tipo System.Drawing.Bitmap.
</summary>
</member>
<member name="P:mnuarrayanes.My.Resources.Resources.Resultado">
<summary>
  Busca un recurso adaptado de tipo System.Drawing.Bitmap.
</summary>
</member>
<member name="T:mnuarrayanes.frmPrincipal.incomingClient">
 <summary>
 Structure that holds important client data, such as IP Address, Pairing State, and others.
 </summary>
</member>
<member name="F:mnuarrayanes.frmPrincipal.CloseAction">
 <summary>
 This gets called when Server.Close() is called.
 It's done that way in order to prevent the app from exiting before actually closing
 all connections.
 </summary>
</member>
<member name="M:mnuarrayanes.frmPrincipal.Log(System.String)">
 <summary>
 Use for displaying errors in the console AND to write it in the log file.
 </summary>
 <param name="message">The message to be written into the log file.</param>
</member>
<member name="M:mnuarrayanes.frmPrincipal.KickClient(mnuarrayanes.frmPrincipal.incomingClient)">
 <summary>
 Disconnects a client from the platform, and adjusts data taking this into account.
 </summary>
 <param name="infoCliente">The client to be disconnected.</param>
</member>
<member name="M:mnuarrayanes.frmPrincipal.DisconnectClient(mnuarrayanes.frmPrincipal.incomingClient)">
 <summary>
 Disconnect a client that didn't pass the connection pairing.
 </summary>
 <param name="infoCliente">The client to disconnect.</param>
</member>
<member name="M:mnuarrayanes.frmPrincipal.ResetVotationData">
 <summary>
 Resets all data that involves the voting, such as the results and the devices that
 sent their data.
 </summary>
</member>
<member name="M:mnuarrayanes.frmPrincipal.ShowVotaciones">
 <summary>
 Show voting results into screen. Use only when data has finished arriving.
 </summary>
</member>
<member name="M:mnuarrayanes.frmPrincipal.SetDeviceState(mnuarrayanes.frmPrincipal.incomingClient@,mnuarrayanes.frmPrincipal.DeviceState)">
 <summary>
 Set client's pairing state to desired state. 
 Also refreshes the device list with the new data.
 </summary>
 <param name="clientInfo">The client whose state is going to be changed.</param>
 <param name="state">The desired state.</param>
</member>
<member name="M:mnuarrayanes.frmPrincipal.PairVotaciones(mnuarrayanes.frmPrincipal.incomingClient@,System.String)">
 <summary>
 Pairs incoming voting data and adds it to the current voting state.
 If the voting data isn't valid, it won't be taken into account.
 </summary>
 <param name="clientInfo">The client that sent the voting data.</param>
 <param name="data">The data to be paired.</param>
</member>
<member name="M:mnuarrayanes.frmPrincipal.PairClientData(System.String,mnuarrayanes.frmPrincipal.incomingClient@)">
 <summary>
 Pairs incoming client data.
 If data is valid, it updates voting data, set's client's state to paired, and lets the client know that it's successfully
 paired.
 </summary>
 <param name="data">The data to be paired. 
 Has to be in JSON format, in order to be serialized into a <see cref="T:mnuarrayanes.ConnectedDeviceInformation"/> via Newtonsoft
 jsonConvert.</param>
 <param name="infoCliente">Client who sent the data.</param>
</member>
</members>
</doc>
